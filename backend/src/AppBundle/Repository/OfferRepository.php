<?php

namespace AppBundle\Repository;

use AppBundle\Entity\Offer;
use Doctrine\ORM\EntityRepository;

/**
 * OfferRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class OfferRepository extends EntityRepository
{

    /**
     * Returns a list with all offers from db
     * Filters can be added for further processing
     *
     * @return array
     */
    public function getOffers() 
    {
        $results = $this->findAll();

        $offers = [];
        foreach ($results as $result) {
            $data = [
                'id' => $result->getId(),
                'title' => $result->getTitle(),
                'description' => $result->getDescription(),
                'email' => $result->getEmail(),
                'imageUrl' => $result->getImageUrl(),
                'creationDate' => $result->getCreationDate()
            ];
            $offers[] = $data;
        }

        return $offers;
    }

    /**
     * Get one offer based on an offer id
     *
     * @param $id
     *
     * @return array
     */
    public function getOffer($id)
    {
        $offer = $this->findOneBy(['id' => $id]);

        $data = [
            'id' => $offer->getId(),
            'title' => $offer->getTitle(),
            'description' => $offer->getDescription(),
            'email' => $offer->getEmail(),
            'imageUrl' => $offer->getImageUrl(),
            'creationDate' => $offer->getCreationDate()
        ];

        return $data;
    }

    /**
     * Saves a new offed to db
     *
     * @param $params
     *
     * @return int
     */
    public function saveOffer($params)
    {
        $offer = new Offer();
        $offer->setTitle($params['title']);
        $offer->setDescription($params['description']);
        $offer->setEmail($params['email']);
        $offer->setImageUrl($params['imageUrl']);

        // Get the Doctrine service and manager
        $em = $this->getEntityManager();
        $em->persist($offer);
        $em->flush();

        return $offer->getId();
    }

    /**
     * Updates an existing offer with new data
     *
     * @param $params
     *
     * @return mixed
     */
    public function updateOffer($params)
    {
        $id = $params['id'];
        $offer = $this->findOneBy(['id' => $id]);
        $offer->setTitle($params['title']);
        $offer->setDescription($params['description']);
        $offer->setEmail($params['email']);
        $offer->setImageUrl($params['imageUrl']);

        // Get the Doctrine service and manager
        $em = $this->getEntityManager();
        $em->persist($offer);
        $em->flush();

        return $offer->getId();
    }

    /**
     * Deletes an offer based on an offer id
     * 
     * @param $id
     */
    public function deleteOffer($id)
    {
        $offer = $this->findOneBy(['id' => $id]);
        $em = $this->getEntityManager();
        $em->remove($offer);
        $em->flush();
    }
}
